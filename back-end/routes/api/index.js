import { Router } from "express";
import signUpUser from "./signUpUser";
import signInUser from "./signInUser";
import verify from "./verify";
import createOrg from "./createOrg";
import getAssociatedOrgs from "./getAssociatedOrgs";
import getOrgData from "./getOrgData";
import protectApi from "../../utils/protectApi";
import testApi from "./testApi";
import getMasters from "./getMasters";
import openOrg from "./openOrg";
import createEntity from "./createEntity";
import {getCustomers, getVendors} from "./getEntities";
import getSelectedOrg from "./getSelectedOrg";
import setSelectedOrg from "./setSelectedOrg";
import getLegerBalance from "./getLedgerBalance";
import getAllBalances from "./getAllBalances";
import createVoucher from "./createVoucher";
import getVouchers from "./getVouchers";
import getVoucherData from "./getVoucherData";
import deleteVoucherData from "./deleteVoucherEntry";
import updateVoucher from "./updateVoucher";
import getCustomerMonthlyIncome from "./getCustomerMonthlyIncome";
import getVendorMonthlyExpense from "./getVendorMonthlyExpense";
import getLedgerTransactions from "./getLedgerTransactions";
import updateEntity from "./updateEntity";
import addBankAccount from "./addBankAccount";
import getBankAccounts from "./getBankAccounts";
import getAutoGeneratedVchNo from "./getAutoGeneratedVchNo";
import getUnpaidVouchers from "./getUnpaidVouchers";
import deleteEntity from "./deleteEntity";
import updateOffsetTransactions from "./updateOffsetTransactions";
import getEntity from "./getEntity";
import getLedgersOfAccountType from "./getLedgersOfAccountType";

const router =Router();

router.post("/signup", signUpUser);
router.post("/signin", signInUser);
router.post("/verify/secret", verify);
router.post("/createorg", protectApi, createOrg);
router.get("/getselectedorg/:userId", protectApi, getSelectedOrg);
router.patch("/setselectedorg/:userId", protectApi, setSelectedOrg);
router.get("/openorg/:orgId", protectApi, openOrg);
router.get("/getassociatedorgs/:userId",protectApi ,getAssociatedOrgs);
router.get("/getmasters/:orgId", protectApi, getMasters);
router.get("/getorgdata/:orgId", protectApi, getOrgData);
router.post("/addbankaccount/:orgId", protectApi, addBankAccount);
router.get("/getbankaccounts/:orgId", protectApi, getBankAccounts);
router.post("/createentity", protectApi, createEntity);
router.patch("/updateentity/:entityId", protectApi, updateEntity);
router.get("/getcustomers/:orgId", protectApi, getCustomers);
router.get("/getvendors/:orgId", protectApi, getVendors);
router.get("/getentity/:orgId/:entityId", protectApi, getEntity);
router.get("/getcustomermonthlyincome/:orgId/:customerLedgerId", protectApi, getCustomerMonthlyIncome);
router.get("/getvendormonthlyexpense/:orgId/:vendorLedgerId", protectApi, getVendorMonthlyExpense);
router.get("/getledgertransactions/:orgId/:ledgerId", protectApi, getLedgerTransactions);
router.get("/getautogeneratedvchno/:orgId/:voucherName/:voucherDate?", protectApi, getAutoGeneratedVchNo);
router.get("/getunpaidvouchers/:orgId/:primaryVoucherType", protectApi, getUnpaidVouchers);
router.get("/getledgersunderaccounttype/:orgId/:accountType", protectApi, getLedgersOfAccountType);
router.post("/createvoucher", protectApi, createVoucher);
router.patch("/updateoffsettransactions/:orgId/:entityId/:transactionId", protectApi, updateOffsetTransactions);
router.get("/getvouchers/:orgId/:voucherName", protectApi, getVouchers);
router.get("/getvoucherdata/:orgId/:voucherName/:transactionId", protectApi, getVoucherData);
router.patch("/updatevoucherdata/:orgId/:transactionId/:otherDetailsId", protectApi, updateVoucher);
router.delete("/deletevoucherentry/:orgId", protectApi, deleteVoucherData);
router.delete("/deleteentity/:orgId/:entityId", protectApi, deleteEntity);
router.get("/getledgerbalance/:orgId/:ledgerId", protectApi, getLegerBalance);
router.get("/getallbalances/:orgId", protectApi, getAllBalances);
router.get("/testApi", testApi);

export default router;
