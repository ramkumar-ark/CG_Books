import useSelectedOrg from "../../hooks/useSelectedOrg";
import { useParams } from "react-router-dom";
import useCreateVoucher from "../../hooks/useCreateVoucher";
import useUpdateVoucher from "../../hooks/useUpdateVoucher";
import useGetVoucher from "../../hooks/useGetVoucher";
import useGetAutoGeneratedVchNo from "../../hooks/useGetAutoGeneratedVchNo";
import constructInitialValues from "./constructInitialValues";

export default function useGetRequiredProps() {
    const {transactionId} = useParams();
    const {userId, '_id':orgId} = useSelectedOrg();
    const voucherData = useGetVoucher(transactionId, 'Journal');
    let voucherNumber = useGetAutoGeneratedVchNo('Journal');
    if (transactionId) voucherNumber = voucherData?.voucherNumber;
    const initialValues = (transactionId && voucherNumber)  ? constructInitialValues(voucherData) : 
        {voucherNumber};
    const [createVoucher, {isLoading:isCreating}] = useCreateVoucher();
    const [updateVoucher, {isLoading:isUpdating}] = useUpdateVoucher(transactionId, voucherData);
    const onFormSubmit = (data) => {
        const requestObject = data;
        requestObject.transaction.userId = userId;
        requestObject.orgId = orgId;
        transactionId ? updateVoucher(requestObject) : createVoucher(requestObject);
    };
    const isLoading = isCreating || isUpdating || !voucherNumber;
    return {initialValues, isLoading, onFormSubmit};
}
